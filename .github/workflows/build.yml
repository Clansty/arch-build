name: BUILD

on:
  push:
  schedule:
    - cron:  '1 */8 * * *'
  workflow_dispatch:

jobs:
  buildAUR:
    strategy:
      matrix:
        repos:
          - pycharm-professional
          - deepin-wine-wechat
          - yesplaymusic
          - yesplaymusic-electron
          - discord_arch_electron
          - osu-lazer
          - visual-paradigm-community
          - finalshell
          - rdm-bin
          - realvnc-vnc-viewer
          - realvnc-vnc-server
          - clash-for-windows-bin
          - cosbrowser
          - slack-electron
          - jadx-gui-desktop
          - mkinitcpio-transflag
          - cydia-impactor
          - typora-free
          - rider
          - ttf-twemoji
          - ttf-twemoji-color
          - microsoft-edge-beta-bin

      fail-fast: false
      
    runs-on: ubuntu-latest
    
    steps:
      - name: download PKGBUILD
        run: wget https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=${{ matrix.repos }} -O PKGBUILD

      - name: determine if this package need to be built
        id: isNeed
        # 这里判断不是特别准确，因为只判断了 x86_64，没有 any 的情况。下面还需要判断一次
        run: |
          source PKGBUILD
          fileName=$pkgname-$pkgver-$pkgrel-x86_64.pkg.tar.zst
          echo $fileName
          echo ::set-output name=isNeed::$(curl -u ${{ secrets.REPO_BUILDER_AUTH }} ${{ secrets.REPO_BUILDER_API }}/api/exists/$fileName)

      - uses: Clansty/build-aur-action@master
        if: ${{ steps.isNeed.outputs.isNeed == 'false' }}
        with:
          repo-name: ${{ matrix.repos }}

      #- name: make it fail if the package cannot be found
        #run: ls *-*.pkg.tar.*
        #if: ${{ steps.isNeed.outputs.isNeed == 'false' }}

      - id: pkgname
        if: ${{ steps.isNeed.outputs.isNeed == 'false' }}
        working-directory: ${{ matrix.repos }}
        run: echo ::set-output name=pkgname::$(ls *-*.pkg.tar.*)

      - name: determine if this package need to be uploaded
        if: ${{ steps.isNeed.outputs.isNeed == 'false' }}
        id: isNeed2
        run: echo ::set-output name=isNeed::$(curl -u ${{ secrets.REPO_BUILDER_AUTH }} ${{ secrets.REPO_BUILDER_API }}/api/exists/${{ steps.pkgname.outputs.pkgname }})

      - name: deploy file
        if: ${{ steps.isNeed.outputs.isNeed == 'false' && steps.isNeed2.outputs.isNeed == 'false' }}
        uses: wlixcc/SFTP-Deploy-Action@v1.0
        with:
          username: 'repobuilder'
          server: ${{ secrets.REPO_BUILDER_HOST }}
          ssh_private_key: ${{ secrets.REPO_BUILDER_PRIVKEY }}
          local_path: ${{ matrix.repos }}/${{ steps.pkgname.outputs.pkgname }}
          remote_path: '/home/repobuilder/tmp'

      - run: curl -u ${{ secrets.REPO_BUILDER_AUTH }} ${{ secrets.REPO_BUILDER_API }}/api/add-package/${{ steps.pkgname.outputs.pkgname }}
        if: ${{ steps.isNeed.outputs.isNeed == 'false' && steps.isNeed2.outputs.isNeed == 'false' }}

      - run: curl -u ${{ secrets.REPO_BUILDER_AUTH }} ${{ secrets.REPO_BUILDER_API }}/api/queue

  # 编译安装的包不能这么搞
  buildAUR-aarch64:
    strategy:
      matrix:
        repos:
          - electron-bin
          - electron12-bin
          - electron13-bin
          - visual-studio-code-bin
          - yay-bin
          - webstorm
          - intellij-idea-ultimate-edition
          - pycharm-professional
          - visual-paradigm-community

      fail-fast: false

    runs-on: ubuntu-latest

    steps:
      - name: download PKGBUILD
        run: wget https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=${{ matrix.repos }} -O PKGBUILD

      - name: determine if this package need to be built
        id: isNeed
        run: |
          source PKGBUILD
          echo ::set-output name=pkgname::$pkgname
          echo ::set-output name=pkgver::$pkgver
          echo ::set-output name=pkgrel::$pkgrel
          fileName=$pkgname-$pkgver-$pkgrel-aarch64.pkg.tar.zst
          echo $fileName
          echo ::set-output name=isNeed::$(curl -u ${{ secrets.REPO_BUILDER_AUTH }} ${{ secrets.REPO_BUILDER_API }}/api/exists/$fileName)

      - uses: Clansty/build-aur-action@aarch64
        if: ${{ steps.isNeed.outputs.isNeed == 'false' }}
        with:
          repo-name: ${{ matrix.repos }}

      #- name: make it fail if the package cannot be found
        #run: ls *-*.pkg.tar.*
        #if: ${{ steps.isNeed.outputs.isNeed == 'false' }}

      - id: pkgname
        if: ${{ steps.isNeed.outputs.isNeed == 'false' }}
        working-directory: ${{ matrix.repos }}
        # 防止一个 pkgbase 两个包引起问题
        run: echo ::set-output name=pkgname::$(ls ${{ steps.isNeed.outputs.pkgname }}-${{ steps.isNeed.outputs.pkgver }}-${{ steps.isNeed.outputs.pkgrel }}-*.pkg.tar.*)

      - name: determine if this package need to be uploaded
        if: ${{ steps.isNeed.outputs.isNeed == 'false' }}
        id: isNeed2
        run: echo ::set-output name=isNeed::$(curl -u ${{ secrets.REPO_BUILDER_AUTH }} ${{ secrets.REPO_BUILDER_API }}/api/exists/${{ steps.pkgname.outputs.pkgname }})

      - name: deploy file
        if: ${{ steps.isNeed.outputs.isNeed == 'false' && steps.isNeed2.outputs.isNeed == 'false' }}
        uses: wlixcc/SFTP-Deploy-Action@v1.0
        with:
          username: 'repobuilder'
          server: ${{ secrets.REPO_BUILDER_HOST }}
          ssh_private_key: ${{ secrets.REPO_BUILDER_PRIVKEY }}
          local_path: ${{ matrix.repos }}/${{ steps.pkgname.outputs.pkgname }}
          remote_path: '/home/repobuilder/repo-builder/tmp'

      - run: curl -u ${{ secrets.REPO_BUILDER_AUTH }} ${{ secrets.REPO_BUILDER_API }}/api/add-package/${{ steps.pkgname.outputs.pkgname }}
        if: ${{ steps.isNeed.outputs.isNeed == 'false' && steps.isNeed2.outputs.isNeed == 'false' }}

      - run: curl -u ${{ secrets.REPO_BUILDER_AUTH }} ${{ secrets.REPO_BUILDER_API }}/api/queue
