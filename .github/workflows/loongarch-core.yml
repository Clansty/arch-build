name: 构建 loongarch64 core 软件源

on:
  schedule:
    - cron:  '1 */8 * * *'
  workflow_dispatch:

jobs:
  # 读取 PKGLIST 文件并转换成 JSON 给下一步读取
  pkglist:
    runs-on: ubuntu-latest
    outputs:
      data: ${{ steps.parse.outputs.data }}
    steps:
      - uses: actions/checkout@v1

      - name: 下载并解压仓库数据库
        run: |
          mkdir pkgdb
          wget https://mirror.rackspace.com/archlinux/core/os/x86_64/core.db.tar.gz && tar -xzf core.db.tar.gz -C pkgdb || echo '仓库数据库不存在'

      - name: 解析包信息
        uses: ./parse-archlinux-repo
        id: parse

  build:
    # 不是 any 的包，自己构建一下
    runs-on: ubuntu-latest
    needs:
      - pkglist
    strategy:
      matrix:
        repo: ${{ fromJSON(needs.pkglist.outputs.data).pkglist }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v1

      - name: clone git 仓库
        run: |
          git clone --depth 1 -b packages/${{ matrix.repo }} https://github.com/archlinux/svntogit-packages.git ${{ matrix.repo }}

      - name: 检查包是否已存在
        id: is-needed
        uses: ./check-is-needed
        with: 
          package-name: ./${{ matrix.repo }}/repos/core-x86_64
          arch: loongarch64
          container: loongarch

      - name: 构建包
        id: build
        uses: Clansty/build-aur-action-loongarch64@main
        if: ${{ steps.is-needed.outputs.is-needed == 'true' }}
        with:
          repo-name: ./${{ matrix.repo }}/repos/core-x86_64
          arch: loongarch64
          packager: Clansty <i@gao4.pw>

      - name: 同步容器内外目录
        if: ${{ steps.is-needed.outputs.is-needed == 'true' }}
        run: |
          sudo mkdir /home/builder
          sudo mount --bind /loongarch64-root/home/builder /home/builder
          sudo chmod 777 /loongarch64-root/home/builder

      - name: 复制文件以便上传
        # rclone 没法指定多个文件
        if: ${{ steps.is-needed.outputs.is-needed == 'true' }}
        run: |
          mkdir rclone-upload
          cp ${{ steps.build.outputs.filelist }} rclone-upload/

      - uses: NiceLabs/rclone-action@master
        if: ${{ steps.is-needed.outputs.is-needed == 'true' }}
        with:
          github-token: ${{ secrets.SECRET_TOKEN }}
          config: ${{ secrets.RCLONE_CONF }}
          config-secret-name: RCLONE_CONF

      - name: 把包上传到 OneDrive
        if: ${{ steps.is-needed.outputs.is-needed == 'true' }}
        run: rclone copy rclone-upload/ 21cn:archlinux/core/

      - name: 提交元信息到 Azure Blob 存储
        if: ${{ steps.is-needed.outputs.is-needed == 'true' }}
        uses: ./
        with: 
          azure-blob-storage-connection-string: ${{ secrets.AZURE_BLOB_STORAGE_CONNECTION_STRING }}
          azure-blob-storage-container: loongarch
          arch: loongarch64
          package-files: ${{ steps.build.outputs.filelist }}

  get-any-package:
    # any 包，直接偷
    runs-on: ubuntu-latest
    needs:
      - pkglist
    strategy:
      matrix:
        include: ${{ fromJSON(needs.pkglist.outputs.data).anylist }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v2.3.0

      # 一个精简版的 check-is-needed
      - name: 下载并解压仓库数据库
        run: |
          mkdir pkgdb
          wget https://archlinux.blob.core.windows.net/loongarch/loongarch64/files.tar.gz && tar -xzf files.tar.gz -C pkgdb || echo '仓库数据库不存在'

      - name: 检查数据库
        run: node check-is-needed/check-db.js
        id: is-needed
        env:
          PKGNAME: ${{ matrix.pkgname }}
          PKGBASE: ${{ matrix.pkgbase }}
          VERSION: ${{ matrix.version }}
          ARCH: ${{ matrix.arch }}
          ARCHIN: loongarch64

      - name: 下载包
        if: ${{ steps.is-needed.outputs.is-needed == 'true' }}
        run: wget https://mirror.rackspace.com/archlinux/core/os/x86_64/${{ matrix.filename }}

      - name: 提交元信息到 Azure Blob 存储
        if: ${{ steps.is-needed.outputs.is-needed == 'true' }}
        uses: ./
        with: 
          azure-blob-storage-connection-string: ${{ secrets.AZURE_BLOB_STORAGE_CONNECTION_STRING }}
          azure-blob-storage-container: loongarch
          arch: loongarch64
          package-files: ${{ matrix.filename }}
